import Head from 'next/head';
import { useState, useEffect } from 'react';
import Opponents from '../components/Opponents';
import PlayerInfo from '../components/PlayerInfo';
import Players from '../components/Players';


export default function Home({ team, awayData }) {
  const [ data, setData ] = useState(team);
  const [ awayTeam, setAwayTeam ] = useState(awayData.team)
  const [ selectedPlayer, setSelectedPlayer ] = useState(data[0]);
  const [ opponentTeam, setOpponentTeam ] = useState(false);
  const [ playerTime, setPlayerTime ] = useState(0);
  // const [ totalTime, setTotalTime ] = (playerTime)
  const [ inGame, setInGame ] = useState([]);
  const [ running, setRunning ] = useState(false)
  
  const [ error, setError ] = useState(false);

  console.log(data)

  return (
    <div >
      {error && 
    <div onClick={() => setError(false)} className='fixed z-50 bg-[#945ed1e1] flex items-center justify-center h-full w-full'>
          <h1 className='font-semibold text-white text-3xl '>There are already 5 players in game. Please remove a player. Click to continue</h1>
    </div>  
      }
      <Head>
        <title>Coach App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='flex flex-col w-full h-full bg-slate-700'>
        {opponentTeam === false ?
        <div onClick={() => setOpponentTeam(true)} className='fixed top-0 right-0 bg-white rounded-md z-50 py-1 px-3 cursor-pointer hover:text-lg hover:text-red-400 transform duration-200 ease-in'>
          Show Opponents
        </div>
        :
        <div onClick={() => setOpponentTeam(false)} className='fixed top-0 right-0 bg-white rounded-sm z-50 py-1 px-3 cursor-pointer hover:text-lg hover:text-red-400 transform duration-200 ease-in'>
        Hide Opponents
      </div>
        }
        <PlayerInfo data={data} selectedPlayer={selectedPlayer} playerTime={playerTime} running={running} />
        <div className='flex flex-col md:flex-row w-full h-full'>
          <Players running={running} data={data} setSelectedPlayer={setSelectedPlayer} selectedPlayer={selectedPlayer} inGame={inGame} setInGame={setInGame} setRunning={setRunning} setError={setError} playerTime={playerTime} setPlayerTime={setPlayerTime} />
          <Opponents opponentTeam={opponentTeam} awayTeam={awayTeam} />
        </div>
      </main>

    <footer>

    </footer>

    </div>
  )
}

export async function getStaticProps() {
  // Fetch data from API Roster
  // const res = await fetch("link here");
  // const data = await res.json()

  // Fetch data opposing roster
  // const awayRes = await fetch("link here");
  // const awayData = await res.json();

  const team = [
    {
      id: 1,
      name: 'Deandre Ayton',
      number: 22,
      position: 'C',
      status: 'Active',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/deandre.png',
      stats: {
        GP: 54,
        MIN: 10.9,
        FG: '37.9%',
        ThreePointPercent: '50%',
        REB: 4.8
      }
    },
    {
      id: 2,
      name: 'Bismack Biyombo',
      number: 18,
      position: 'C',
      status: 'Active',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/bismack.png',
      stats: {
        GP: 36,
        MIN: 8.9,
        FG: '32.9%',
        ThreePointPercent: '20%',
        REB: 7
      }
    },
    {
      id: 3,
      name: 'Devin Booker',
      number: 1,
      position: 'SG',
      status: 'Active',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/devin.png',
      stats: {
        GP: 24,
        MIN: 14.9,
        FG: '39.9%',
        ThreePointPercent: '44%',
        REB: 4
      }
    },
    {
      id: 4,
      name: 'Mikal Bridges',
      number: 25,
      position: 'SF',
      status: 'Active',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/mikal.png',
      stats: {
        GP: 60,
        MIN: 12.3,
        FG: '30%',
        ThreePointPercent: '13%',
        REB: 7.6
      }
    },
    {
      id: 5,
      name: 'Torrey Craig',
      number: 0,
      position: 'SF',
      status: 'Active',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/torrey.png',
      stats: {
        GP: 54,
        MIN: 10.9,
        FG: '37.9%',
        ThreePointPercent: '50%',
        REB: 4.8
      }
    },
    {
      id: 6,
      name: 'Jae Crowder',
      number: 99,
      position: 'SF',
      status: 'Active',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/jae.png',
      stats: {
        GP: 54,
        MIN: 10.9,
        FG: '37.9%',
        ThreePointPercent: '50%',
        REB: 4.8
      }
    },
    {
      id: 7,
      name: 'Cameron Johnson',
      number: 23,
      position: 'SF',
      status: 'Injured',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/cameron.png',
      stats: {
        GP: 54,
        MIN: 10.9,
        FG: '37.9%',
        ThreePointPercent: '50%',
        REB: 4.8
      }
    },
    {
      id: 8,
      name: 'Jock Landale',
      number: null,
      position: 'C',
      status: 'Suspended',
      timeIn: [{
        time: 0,
        date: null
      }],
      image: '/jock.png',
      stats: {
        GP: 54,
        MIN: 10.9,
        FG: '37.9%',
        ThreePointPercent: '50%',
        REB: 4.8
      }
    },
  ];

  const awayData = {
    teamName: 'Chicago Bulls',
    team: [
      {
        name: 'Lonzo Ball',
        number: 2,
        position: 'PG',
        image: '/lonzo.png',
      },
      {
        name: 'Tony Bradley',
        number: 13,
        position: 'C',
        image: '/tony.png',
      },
      {
        name: 'Alex Caruso',
        number: 6,
        position: 'SG',
        image: '/alex.png',
      },
      {
        name: 'Tyler Cook',
        number: 25,
        position: 'F',
        image: '/tyler.png',
      },
      {
        name: 'DeMar DeRozan',
        number: 11,
        position: 'SF',
        image: '/demar.png',
      },
      {
        name: 'Ayo Dosunmu',
        number: 12,
        position: 'SG',
        image: '/ayo.png',
      },
      {
        name: 'Andre Drummond',
        number: null,
        position: 'C',
        image: '/andre.png',
      },
      {
        name: 'Javonte Green',
        number: 24,
        position: 'SF',
        image: '/javonte.png',
      },

    ]
}

// const homeTeam = JSON.stringify(data);
// const awayTeam = JSON.stringify(awayData);

  return {
    props: {
      team,
      awayData
    }
  }
}